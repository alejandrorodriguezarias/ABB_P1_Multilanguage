Compiler: GCC 5.4.0
Operating System: Ubuntu 16.04.2 LTS 64 bits

C is an imperative procedural programming language that supports structure programming and recursion. C has
a weak and static typing and provides a low-level access to memory, allowing us to make a dinamic and manual memory management.

C give us a lot of control flow tools for our problem:
	Executing a set of statements only if some condition is met (If-Else).
	Executing a set of statements zero or more times, until some condition is met (While(condition)).
	Allows a variable to be tested for equality against a list of values. Each value is called a case, and the variable being switched on is checked 
	for each (Switch).
	Executing a set of distant statements, after which the flow of control usually returns (subroutines).
	
The C library "stdlib" provides us  functions to make a manual memory management of the dinamic memory. In our problem we use two of that functions:
	The "malloc" function allocates “size” bytes and returns a pointer to the allocated memory.
	The "free" function frees the memory space pointed by the pointer.
	
For the data structure we use: 
	Structure: a user defined data type available in C that allows to combine data items of different kinds. 
	Structures are used to represent a record. 

The main differences when it comes to adapt Pascal code to C code are Pascal abstractions in memory management and reference parameters,
since C has a lower level memory management.

Memory Management

	To inicialize a pointer in Pascal is enough to call the "new" function with the pointer as a parameter, but in order to initialize a pointer in C
	setting the pointer to the returned value of the "malloc" function is needed. The "malloc" function requires the size of the pointer in bytes to allocate
	the memory.

Differences within reference parameters

	Pascal has a "VAR" keyword to pass arguments by reference but in C language every argument is passed by value, so passing a pointer to the memory address
	of the argument is needed in order to modify it.



Unit in C


	C needs two files to make a library: a code file (.c) and a header file (.h). The header file provides a program with library functions.
	Pascal has the header and source code in the same file.
